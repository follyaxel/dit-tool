/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package org.aylex.dit

import org.aylex.dit.dsl.Euro
import org.aylex.dit.dsl.Income
import org.aylex.dit.dsl.TaxBracket

class TaxCalculator() {
    private var taxBrackets = listOf<TaxBracket>();

    constructor(taxBrackets: List<TaxBracket>) : this() {
        this.taxBrackets = taxBrackets
    }

    fun calculateTax(income: Income): Euro {
        var tax: Euro = Euro.of(0)
        for (taxBracket: TaxBracket in taxBrackets) {
            if (taxBracket.hasMax() && income.isGreaterThanOrEqualTo(taxBracket.max)) {
                if(taxBracket.hasMin()) {
                    tax = tax.add(taxBracket.value.of(taxBracket.max.subtract(taxBracket.min.subtract(Euro.of(1)))))
                }
                tax = tax.add(taxBracket.value.of(taxBracket.max))
            } else if (income.isGreaterThanOrEqualTo(taxBracket.min)) {
                if(taxBracket.hasMin()) {
                    tax = tax.add(taxBracket.value.of(income.subtract(taxBracket.min.subtract(Euro.of(1)))))
                } else
                    tax = tax.add(taxBracket.value.of(income))
            }
        }
        return tax;
    }
}
